version: '3.9'

services:
  auth-api:
    container_name: auth-api
    build:
      context: ./Financeiro.Auth
      dockerfile: Dockerfile
    ports:
      - "5112:5112"
    depends_on:
      - db
    networks:
      - app

  aula-api:
    container_name: aula-api
    build:
      context: ./Financeiro.Aula
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - app

  boleto-api:
    container_name: boleto-api
    build:
      context: ./Financeiro.Boleto
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    depends_on:
      - db
    networks:
      - app

  aula-queue:
    container_name: aula-queue
    build:
      context: ./Financeiro.Aula
      dockerfile: Dockerfile.Queue
    depends_on:
      - db
      - rabbitmq
    networks:
      - app

  boleto-queue:
    container_name: boleto-queue
    build:
      context: ./Financeiro.Boleto
      dockerfile: Dockerfile.Queue
    depends_on:
      - db
      - rabbitmq
    networks:
      - app

  #front:
  #  container_name: front
  #  image: temp_angular
  #  #build:
  #  #  context: ../financeiro-front
  #  #  dockerfile: Dockerfile
  #  #volumes:
  #  #  - './angulardockerproject:/usr/src/app' 
  #  ports: 
  #    - '4200:80'
  
  db:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "SqlServer2019!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
      #-v /home/felipe/docker/mssql:/var/opt/mssql/data
    networks:
      - app

  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - '8008:80'
      - '5341:5341'
    environment:
      ACCEPT_EULA: Y
    volumes:
      - seqdata:/data
    networks:
      - app

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./storage/rabbitmq1:/var/lib/rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
    #   - RABBITMQ_DEFAULT_USER = admin
    #   - RABBITMQ_DEFAULT_PASS = passw123
    networks:
      - app

  redis:
    image: redis
    #command: redis-server --requirepass Redis2019!
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ./storage/redis:/data
    networks:
      - app

  # # Usando API de login pr√≥pria por enquanto
  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:18.0.2
  #   command: start-dev
  #   depends_on:
  #     - db
  #   ports:
  #     - "8085:8080"
  #   volumes:
  #       - ./storage/keycloak:/opt/keycloak/data
  #   environment:
  #     - KEYCLOAK_USER=admin
  #     - KEYCLOAK_PASSWORD=admin
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #     - DB_VENDOR=mssql
  #     - DB_USER=sa
  #     - DB_PASSWORD=SqlServer2019!
  #     - DB_ADDR=db
  #     - DB_DATABASE=Keycloak
  #   networks:
  #     - app

volumes:
  sqlvolume:
  seqdata:

networks:
  app:
    driver: bridge
    
